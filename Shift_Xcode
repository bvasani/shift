Shift X-code application


**Simple print your name**

—>Main

-Text field 
-Button
-Label

—>ViewController

import UIKit

class ViewController: UIViewController {

    @IBOutlet weak var edittext: UITextField!
    @IBOutlet weak var nameview: UILabel!

    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
    }

    @IBAction func submit(_ sender: Any) {
         nameview.text = (edittext.text ?? "")
    }
}

—————————————————————————————————

**Addition Two Numbers**

—>Main

-Text field 
-Button
-Label

import UIKit

class ViewController: UIViewController {

    @IBOutlet weak var value1: UITextField!
    @IBOutlet weak var value2: UITextField!
    @IBOutlet weak var display: UILabel!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
    }

    @IBAction func calculate(_ sender: Any) {
        let a = Double(value1.text!)
        let b = Double(value2.text!)
       
        let c = Double(a!+b!)
        display.text = "Addition is : \(c)"
      
    }
}

—————————————————————————————————

**Circular Image**

—>Main

-image view

import UIKit

class ViewController: UIViewController {

    @IBOutlet weak var image: UIImageView!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
            image.layer.borderWidth = 1
            image.layer.masksToBounds = false
            image.layer.borderColor = UIColor.black.cgColor
            image.layer.cornerRadius = image.frame.height/2
            image.clipsToBounds = true
        
        // Do any additional setup after loading the view.
    }
}

—————————————————————————————————

**Web View**

import UIKit
import WebKit

class ViewController: UIViewController, WKUIDelegate {

    var webView: WKWebView!

    override func loadView() {
         let webConfiguration = WKWebViewConfiguration()
         webView = WKWebView(frame: .zero, configuration: webConfiguration)
         webView.uiDelegate = self
         view = webView
     }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        let url = URL(string: "https://www.google.com/")
        webView.load(URLRequest(url: url!))
        
        // Do any additional setup after loading the view.
    }
}

—————————————————————————————————

**Tabbar + navigation + Table View**

-Tab Bar Controller
-Navigation Controller 
-Table View

import UIKit

class StudentListViewController: UIViewController, UITableViewDelegate, UITableViewDataSource {
    
    let student_list = ["bhargav”,”nishant”,”truple”]
    //let imgArr = ["image2","image2","image2"]


    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return student_list.count
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = UITableViewCell.init(style: .default, reuseIdentifier: "studentCell")
        cell.textLabel?.text = student_list[indexPath.row]
        //cell.imageView?.image = UIImage(named: imgArr[indexPath.row])
        
        cell.clipsToBounds = true
        cell.layer.cornerRadius = 10
        
        cell.selectedBackgroundView?.backgroundColor = .blue
        
        return cell
    }

    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        let student_selected = student_list[indexPath.row]
        let alert = UIAlertController(title: "Student Selected", message: "You have to select \(student_selected)", preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "ok", style: .default,handler: nil))
        self.present(alert, animated: true, completion: nil)
    }
    

    override func viewDidLoad() {
        super.viewDidLoad()

        // Do any additional setup after loading the view.
    }
    
}

—————————————————————————————————

**Alert Dialog Box **

-Button

import UIKit

class ViewController: UIViewController {

    @IBAction func aleart(_ sender: Any) {
        showAleart()
    }
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
    }

    func showAleart(){
        let alert = UIAlertController(title: "Aleart", message: "You have to click button", preferredStyle: .alert)
        
        alert.addAction(UIAlertAction(title: "ok", style: .default,handler: nil))

        //alert.addAction(UIAlertAction(title: "Cancel", style: UIAlertActionStyle.default, handler: { _ in
                    //Cancel Action }))

        alert.addAction(UIAlertAction(title: "Sign out", style: UIAlertAction.Style.destructive,handler: {(_: UIAlertAction!) in
                                                //Sign out action
                }))
    
        self.present(alert, animated: true, completion: nil)
    }
}


—————————————————————————————————

**Api Demo**

UIButton
UIImageview

import UIKit

class ViewController: UIViewController {

    @IBOutlet weak var MyImage: UIImageView!
    @IBOutlet weak var myIndicatorView: UIActivityIndicatorView!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        myIndicatorView.isHidden = false
    }

    @IBAction func submit(_ sender: Any) {
        dog()
    }
    
    func dog(){
        let myURL = URL(string: "https://dog.ceo/api/breeds/image/random")
        var myRequest = URLRequest(url:myURL!)
        myRequest.httpMethod = "GET"
        
        let task = try! URLSession.shared.dataTask(with: myRequest){ (mydata, URLResponse, error) in
            
            let jsonData = try! JSONSerialization.jsonObject(with: mydata!) as! [String: Any]
            
            let msgData = jsonData["message"] as! String
            print(msgData)
            
            //Image Set
            DispatchQueue.main.async{
                let dogUrl = URL(string: msgData)
                let imgData = try! Data(contentsOf: dogUrl!)
                self.MyImage.image = UIImage (data: imgData)
                self.myIndicatorView.isHidden = true
            }
            print(msgData)
        }
        task.resume()
    }
}

—————————————————————————————————

**Picker View**


import SwiftUI


struct ContentView: View {
    
    @State private var countryIndex = 0
    
    var countries = ["India","USA","Canada","Aus","Africa","UAE"]

    var body: some View {
        Section{
            Picker(selection: $countryIndex, label: Text("Country")) {
                ForEach(0 ..< countries.count){
                    Text(self.countries[$0]).tag($0)
                }
            }
        }
        
        Section{
            Picker(selection: $countryIndex, label: Text("Country")) {
                ForEach(0 ..< countries.count){
                    Text(self.countries[$0]).tag($0)
                }
            }.pickerStyle(WheelPickerStyle())
        }
        
        
        NavigationView{
            Form{
                Section("Color Prafrance"){
                    Picker(selection: $countryIndex, label: Text("Country")) {
                        ForEach(0 ..< countries.count){
                            Text(self.countries[$0]).tag($0)
                        }
                    }
                }
            }.navigationTitle(Text("Country"))
        }
    }

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}

}

—————————————————————————————————

**Indicator View**

UIButton
indicator

import UIKit

class ViewController: UIViewController {

    @IBOutlet weak var indicator: UIActivityIndicatorView!
    
    override func viewDidLoad() {
        super.viewDidLoad()
    }

    @IBAction func startindicator(_ sender: Any) {
        indicator.startAnimating()

    }
    
    @IBAction func stopindicator(_ sender: Any) {
        indicator.stopAnimating()

    }
}




—————————————————————————————————

**CollectionView**

CollectionView

—————————————————————————————————

**data base**

-->Table view

//
//  ViewController.swift
//  DBDemo
//
//  Created by Bilal Hassan on 23/5/19.
//  Copyright © 2019 Bilal Hassan. All rights reserved.
//

import UIKit

class ViewController: UIViewController, UITableViewDelegate, UITableViewDataSource
{

    @IBOutlet weak var personTable: UITableView!
    
    let cellReuseIdentifier = "cell"
    
    var db:DBHelper = DBHelper()
    
    var persons:[Person] = []
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        personTable.register(UITableViewCell.self, forCellReuseIdentifier: cellReuseIdentifier)
        personTable.delegate = self
        personTable.dataSource = self
        
        
        db.insert(id: 0, name: "Bilal", age: 24)
        db.insert(id: 0, name: "Bosh", age: 25)
        db.insert(id: 0, name: "Thor", age: 23)
        db.insert(id: 0, name: "Edward", age: 44)
        db.insert(id: 0, name: "Ronaldo", age: 34)
        
        persons = db.read()
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int
    {
        return persons.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell
    {
        
        let cell:UITableViewCell = tableView.dequeueReusableCell(withIdentifier: cellReuseIdentifier)!
        
        cell.textLabel?.text = "Name: " + persons[indexPath.row].name + ", " + "Age: " + String(persons[indexPath.row].age)
        
        return cell
    }
    
    
    
}

-------


import Foundation
import SQLite3

class DBHelper
{
    init()
    {
        db = openDatabase()
        createTable()
    }

    let dbPath: String = "myDb.sqlite"
    var db:OpaquePointer?

    func openDatabase() -> OpaquePointer?
    {
        let fileURL = try! FileManager.default.url(for: .documentDirectory, in: .userDomainMask, appropriateFor: nil, create: false)
            .appendingPathComponent(dbPath)
        var db: OpaquePointer? = nil
        if sqlite3_open(fileURL.path, &db) != SQLITE_OK
        {
            print("error opening database")
            return nil
        }
        else
        {
            print("Successfully opened connection to database at \(dbPath)")
            return db
        }
    }
    
    
    
    
    
    
    func createTable() {
        let createTableString = "CREATE TABLE IF NOT EXISTS person(Id INTEGER PRIMARY KEY,name TEXT,age INTEGER);"
        var createTableStatement: OpaquePointer? = nil
        if sqlite3_prepare_v2(db, createTableString, -1, &createTableStatement, nil) == SQLITE_OK
        {
            if sqlite3_step(createTableStatement) == SQLITE_DONE
            {
                print("person table created.")
            } else {
                print("person table could not be created.")
            }
        } else {
            print("CREATE TABLE statement could not be prepared.")
        }
        sqlite3_finalize(createTableStatement)
    }
    
    
    func insert(id:Int, name:String, age:Int)
    {
        let persons = read()
        for p in persons
        {
            if p.id == id
            {
                return
            }
        }
        let insertStatementString = "INSERT INTO person (Id, name, age) VALUES (NULL, ?, ?);"
        var insertStatement: OpaquePointer? = nil
        if sqlite3_prepare_v2(db, insertStatementString, -1, &insertStatement, nil) == SQLITE_OK {
            sqlite3_bind_text(insertStatement, 1, (name as NSString).utf8String, -1, nil)
            sqlite3_bind_int(insertStatement, 2, Int32(age))
            
            if sqlite3_step(insertStatement) == SQLITE_DONE {
                print("Successfully inserted row.")
            } else {
                print("Could not insert row.")
            }
        } else {
            print("INSERT statement could not be prepared.")
        }
        sqlite3_finalize(insertStatement)
    }
    
    func read() -> [Person] {
        let queryStatementString = "SELECT * FROM person;"
        var queryStatement: OpaquePointer? = nil
        var psns : [Person] = []
        if sqlite3_prepare_v2(db, queryStatementString, -1, &queryStatement, nil) == SQLITE_OK {
            while sqlite3_step(queryStatement) == SQLITE_ROW {
                let id = sqlite3_column_int(queryStatement, 0)
                let name = String(describing: String(cString: sqlite3_column_text(queryStatement, 1)))
                let year = sqlite3_column_int(queryStatement, 2)
                psns.append(Person(id: Int(id), name: name, age: Int(year)))
                print("Query Result:")
                print("\(id) | \(name) | \(year)")
            }
        } else {
            print("SELECT statement could not be prepared")
        }
        sqlite3_finalize(queryStatement)
        return psns
    }
    
    func deleteByID(id:Int) {
        let deleteStatementStirng = "DELETE FROM person WHERE Id = ?;"
        var deleteStatement: OpaquePointer? = nil
        if sqlite3_prepare_v2(db, deleteStatementStirng, -1, &deleteStatement, nil) == SQLITE_OK {
            sqlite3_bind_int(deleteStatement, 1, Int32(id))
            if sqlite3_step(deleteStatement) == SQLITE_DONE {
                print("Successfully deleted row.")
            } else {
                print("Could not delete row.")
            }
        } else {
            print("DELETE statement could not be prepared")
        }
        sqlite3_finalize(deleteStatement)
    }
    
}

------

import Foundation

class Person
{
    
    var name: String = ""
    var age: Int = 0
    var id: Int = 0
    
    init(id:Int, name:String, age:Int)
    {
        self.id = id
        self.name = name
        self.age = age
    }
    
}


----------------------------------

**Segue**

UITextField — textField to get firstname of user
UIButton — button to push segue to FirstViewController.swift
UILabel — label to display fullname.

UITextField — textField to get lastname of user
UIButton — button to unwind segue to LandingPageViewController.swift
UILabel — label to display Firstname which is received from LandingPageViewController.

-----

LandingPageViewController.swift
import UIKit

class LandingPageViewController:UIViewController{

    @IBOutlet weak var textFieldFirstName: UITextField!
    @IBOutlet weak var labelFullname: UILabel!

    var firstname: String?

    override func viewWillAppear(_ animated: Bool) {
    guard let fullname = fullname else { return }
    textFieldFirstName.text = “”
    labelFullname.text = “Fullname: \(fullname)”
    }
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
    guard let LandingVC = segue.destination as? LandingPageViewController else { return }
    if let firstname = firstname, let lastname = textFieldLastName.text {
    LandingVC.fullname = firstname + “ “ + lastname
    }
    }
    
    //To Perform Unwind Seque
    @IBAction func performUnwindSegueOperation(_ sender: UIStoryboardSegue) {
    guard let landingVC = sender.source as? LandingPageViewController else { return }
    landingVC.fullname = textFieldFirstName.text
    }
}



---------
    FirstViewController.swift

    import UIKit

    class FirstViewController:UIViewController{

        @IBOutlet weak var textFieldFirstName: UITextField!
        @IBOutlet weak var labelFullname: UILabel!

        var firstname: String?

        override func viewDidLoad() {
        super.viewDidLoad()
        labelFirstName.text = “Firstname: \(firstname ?? “”)”
        }
        
        override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        guard let LandingVC = segue.destination as? LandingPageViewController else { return }
        if let firstname = firstname, let lastname = textFieldLastName.text {
        LandingVC.fullname = firstname + “ “ + lastname
        }
        }
    }
        
